创建版本库
$ git init
$ git add readme.txt
$ git commit -m "wrote a readme file"
看文件内容
$ cat readme.txt
版本回退
$ git log
$ git reset --hard HEAD^
$ git reset --hard 1094a
$ git reflog
查看状态
$ git status
查看工作区和版本库里面最新版本的区别
$ git diff HEAD -- readme.txt 
撤销修改 丢弃工作区的修改
$ git checkout -- readme.txt
把暂存区的修改撤销掉（unstage），重新放回工作区：
$ git reset HEAD readme.txt
删除文件
$ rm test.txt
$ git commit -m "remove test.txt"
$ git checkout -- test.txt	（错删 还原工作区内容）
放在远程仓库
$ git remote add origin git@github.com:buaalqh/test.git
$ git push -u origin master
$ git push origin master
克隆远程仓库
$ git clone git@github.com:michaelliao/learngit.git
分支管理：
	创建dev分支并切换分支（git checkout命令加上-b参数表示创建并切换） $ git checkout -b dev （$ git branch dev $ git checkout dev）
	$ git switch -c dev
	查看当前分支 $ git branch
	切换回master分支 $ git checkout master / $ git switch master
	把dev分支的工作成果合并到当前分支上 $ git merge dev
	删除dev分支 $ git branch -d dev
解决冲突：
	当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。用git log --graph命令可以看到分支合并图。
